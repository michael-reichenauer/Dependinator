<UserControl
	x:Class="Dependiator.MainViews.MainView"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:ui="clr-namespace:Dependiator.Utils.UI"
	xmlns:virtualCanvas="clr-namespace:Dependiator.Utils.UI.VirtualCanvas"
	xmlns:local="clr-namespace:Dependiator.MainViews"
	mc:Ignorable="d"
	d:DesignHeight="300" d:DesignWidth="300">

	<Grid>
		<Grid.RowDefinitions>
			<!-- Commits log -->
			<RowDefinition Height="*" />
			<!-- Grid splitter -->
			<RowDefinition Height="Auto" />
			<!-- Commit details -->
			<RowDefinition Height="150" />
		</Grid.RowDefinitions>

		<!-- Commits log -->
		<Border Grid.Row="0" BorderBrush="{DynamicResource BorderBrush}" BorderThickness="1">

			<ListBox
				x:Name="ItemsListBox"
				Background="Transparent"
				ItemsSource="{Binding ItemsSource}"
				IsTextSearchEnabled="False"
				Padding="4"
				Style="{DynamicResource ListBoxScrollbarStyle}"
				SelectionMode="Extended"
				SelectedIndex="{Binding SelectedIndex, Mode=TwoWay}"
				SelectedItem="{Binding SelectedItem, Mode=TwoWay}">

				<ListBox.InputBindings>
					<KeyBinding Key="Enter" Command="{Binding ToggleDetailsCommand}" />
				</ListBox.InputBindings>

				<ListBox.ItemsPanel>
					<ItemsPanelTemplate>
						<virtualCanvas:ZoomableCanvas
							Loaded="ZoomableCanvas_Loaded"
							RealizationLimit="1000"
							RealizationRate="30"
							RealizationPriority="Normal"
							ApplyTransform="false" />
					</ItemsPanelTemplate>
				</ListBox.ItemsPanel>

				<ListBox.ItemContainerStyle>
					<Style TargetType="ListBoxItem">

						<Setter Property="Canvas.ZIndex" Value="{Binding CanvasZIndex}" />
						<Setter Property="Canvas.Top" Value="{Binding CanvasTop}" />
						<Setter Property="Canvas.Left" Value="{Binding CanvasLeft}" />
						<Setter Property="Width">
							<Setter.Value>
								<MultiBinding
									Converter="{x:Static virtualCanvas:ArithmeticConverter.Default}"
									ConverterParameter="*">
									<Binding Path="CanvasWidth" />
									<Binding
										Path="Scale"
										RelativeSource="{RelativeSource	AncestorType=virtualCanvas:ZoomableCanvas}" />
								</MultiBinding>
							</Setter.Value>
						</Setter>

						<Setter Property="Height">
							<Setter.Value>
								<MultiBinding
									Converter="{x:Static virtualCanvas:ArithmeticConverter.Default}"
									ConverterParameter="*">
									<Binding Path="CanvasHeight" />
									<Binding
										Path="Scale"
										RelativeSource="{RelativeSource	AncestorType=virtualCanvas:ZoomableCanvas}" />
								</MultiBinding>
							</Setter.Value>
						</Setter>

						<Setter Property="Background" Value="Transparent" />
						<Setter Property="Padding" Value="0" />
						<Setter Property="HorizontalContentAlignment" Value="Stretch" />
						<Setter Property="VerticalContentAlignment" Value="Stretch" />
						
						<Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
						
						<EventSetter Event="MouseDoubleClick" Handler="MouseDobleClick" />
						<EventSetter Event="MouseUp" Handler="EventMouseUp" />
						<EventSetter Event="MouseEnter" Handler="MouseEntering" />
						<EventSetter Event="MouseLeave" Handler="MouseLeaving" />

						<!-- Style for list items (selected/hoover) -->
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="ListBoxItem">
									<Border
										Name="ItemBorder"
										CornerRadius="0"
										BorderBrush="{x:Null}"
										BorderThickness="1"
										Margin="0"
										Background="{x:Null}">
										<ContentPresenter />
									</Border>
									<ControlTemplate.Triggers>
										<Trigger Property="IsSelected" Value="True">
											<Setter
												TargetName="ItemBorder"
												Property="BorderBrush"
												Value="{DynamicResource SelectedItemBorderBrush}" />
											<Setter
												TargetName="ItemBorder"
												Property="Background"
												Value="{x:Null}" />
										</Trigger>
										<MultiTrigger>
											<MultiTrigger.Conditions>
												<Condition Property="IsMouseOver" Value="True" />
												<Condition Property="IsSelected" Value="False" />
											</MultiTrigger.Conditions>
											<Setter
												TargetName="ItemBorder"
												Property="BorderBrush"
												Value="{Binding HoverBrush}" />
										</MultiTrigger>
									</ControlTemplate.Triggers>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
						<Style.Triggers>


							<!-- Module line -->
							<DataTrigger Binding="{Binding Type}" Value="ModuleViewModel">
								<Setter Property="IsEnabled" Value="true" />
								<Setter Property="Focusable" Value="False" />
								<Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
								<Setter Property="ContentTemplate">
									<Setter.Value>
										<DataTemplate>
											<Grid>
												<Rectangle
													Width="{Binding RectangleWidth}"
													Height="{Binding RectangleHeight}"
													Fill="Transparent"
													Stroke="{Binding RectangleBrush}"
													StrokeThickness="{Binding StrokeThickness}" />

											</Grid>
										</DataTemplate>
									</Setter.Value>
								</Setter>
							</DataTrigger>

							<DataTrigger Binding="{Binding Type}" Value="ModuleNameViewModel">
								<Setter Property="IsEnabled" Value="false" />
								<Setter Property="Focusable" Value="False" />
								<Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
								<Setter Property="ContentTemplate">
									<Setter.Value>
										<DataTemplate>
											<Grid>
												<TextBlock
														Text="{Binding Name}"
														Foreground="{DynamicResource TextBrush}"
														FontSize="{Binding FontSize}"
														HorizontalAlignment="Left"
														VerticalAlignment="Top" />
											</Grid>
										</DataTemplate>
									</Setter.Value>
								</Setter>
							</DataTrigger>


						</Style.Triggers>

					</Style>

				</ListBox.ItemContainerStyle>

			</ListBox>


		</Border>

		<ui:HideableGridSplitter
			Grid.Row="1"
			Visibility="{Binding IsShowCommitDetails, Converter={StaticResource VC}}"
			Background="{DynamicResource BorderBrush}"
			HorizontalAlignment="Stretch"
			VerticalAlignment="Center"
			Height="2" />

		<!-- Commit details -->
		<!--<local:CommitDetailsView
			Grid.Row="2"
			DataContext="{Binding CommitDetailsViewModel}" />-->

	</Grid>

</UserControl>