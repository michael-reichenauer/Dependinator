<UserControl
	x:Class="Dependiator.MainViews.MainView"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:ui="clr-namespace:Dependiator.Utils.UI"
	xmlns:virtualCanvas="clr-namespace:Dependiator.Utils.UI.VirtualCanvas"
	xmlns:local="clr-namespace:Dependiator.MainViews"
	mc:Ignorable="d"
	d:DesignHeight="300" d:DesignWidth="300">

	<Grid>
		<Grid.RowDefinitions>
			<!-- Commits log -->
			<RowDefinition Height="*" />
			<!-- Grid splitter -->
			<RowDefinition Height="Auto" />
			<!-- Commit details -->
			<RowDefinition Height="150" />
		</Grid.RowDefinitions>

		<!-- Commits log -->
		<Border Grid.Row="0" BorderBrush="{DynamicResource BorderBrush}" BorderThickness="1">

			<ListBox
				x:Name="ItemsListBox"
				ItemsSource="{Binding VirtualItemsSource}"
				IsTextSearchEnabled="False"
				Padding="4"
				Style="{DynamicResource ListBoxScrollbarStyle}"
				SelectionMode="Extended"
				SelectedIndex="{Binding SelectedIndex, Mode=TwoWay}"
				SelectedItem="{Binding SelectedItem, Mode=TwoWay}">

				<ListBox.InputBindings>
					<KeyBinding Key="Enter" Command="{Binding ToggleDetailsCommand}" />
				</ListBox.InputBindings>

				<ListBox.ItemsPanel>
					<ItemsPanelTemplate>
						<virtualCanvas:ZoomableCanvas
							Loaded="ZoomableCanvas_Loaded"
							RealizationLimit="1000"
							RealizationRate="20"
							RealizationPriority="Normal"
							ApplyTransform="false" />
					</ItemsPanelTemplate>
				</ListBox.ItemsPanel>

				<ListBox.ItemContainerStyle>
					<Style TargetType="ListBoxItem">

						<Setter Property="Canvas.ZIndex" Value="{Binding ZIndex}" />

						<!-- Style for list items (selected/hoover) -->
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="ListBoxItem">
									<Border
										Name="ItemBorder"
										CornerRadius="0"
										BorderBrush="{x:Null}"
										BorderThickness="1"
										Margin="0"
										Background="{x:Null}">
										<ContentPresenter />
									</Border>
									<ControlTemplate.Triggers>
										<Trigger Property="IsSelected" Value="True">
											<Setter
												TargetName="ItemBorder"
												Property="BorderBrush"
												Value="{DynamicResource SelectedItemBorderBrush}" />
											<Setter
												TargetName="ItemBorder"
												Property="Background"
												Value="{x:Null}" />
										</Trigger>
										<MultiTrigger>
											<MultiTrigger.Conditions>
												<Condition Property="IsMouseOver" Value="True" />
												<Condition Property="IsSelected" Value="False" />
											</MultiTrigger.Conditions>
											<Setter
												TargetName="ItemBorder"
												Property="BorderBrush"
												Value="{Binding HoverBrush}" />
										</MultiTrigger>
									</ControlTemplate.Triggers>
								</ControlTemplate>
							</Setter.Value>
						</Setter>


						<Setter Property="Canvas.Top" Value="{Binding Top}" />
						<Setter Property="Canvas.Left" Value="{Binding Left}" />

						<Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
						<EventSetter Event="MouseDoubleClick" Handler="MouseDobleClick" />
						<EventSetter Event="MouseUp" Handler="EventMouseUp" />
						<EventSetter Event="MouseEnter" Handler="MouseEntering" />
						<EventSetter Event="MouseLeave" Handler="MouseLeaving" />

						<Setter Property="Width">
							<Setter.Value>
								<MultiBinding
									Converter="{x:Static virtualCanvas:ArithmeticConverter.Default}"
									ConverterParameter="*">
									<Binding Path="Width" />
									<Binding
										Path="Scale"
										RelativeSource="{RelativeSource	AncestorType=virtualCanvas:ZoomableCanvas}" />
								</MultiBinding>
							</Setter.Value>
						</Setter>

						<Setter Property="Height">
							<Setter.Value>
								<MultiBinding
									Converter="{x:Static virtualCanvas:ArithmeticConverter.Default}"
									ConverterParameter="*">
									<Binding Path="Height" />
									<Binding
										Path="Scale"
										RelativeSource="{RelativeSource	AncestorType=virtualCanvas:ZoomableCanvas}" />
								</MultiBinding>
							</Setter.Value>
						</Setter>

						<Setter Property="VerticalContentAlignment" Value="Stretch" />
						<Setter Property="HorizontalContentAlignment" Value="Stretch" />
						<Setter Property="Padding" Value="0" />
						<Setter Property="Background" Value="Transparent" />

						<Style.Triggers>

							<!-- Branch line -->
							<DataTrigger Binding="{Binding Type}" Value="BranchViewModel">
								<Setter Property="IsEnabled" Value="true" />
								<Setter Property="Focusable" Value="False" />
								<Setter Property="Background" Value="Transparent" />

								<Setter Property="ContentTemplate">
									<Setter.Value>
										<DataTemplate>
											<Grid
												Background="Transparent">
												<Path
													Data="{Binding Line}"
													Stroke="{Binding Brush}"
													StrokeThickness="{Binding StrokeThickness}"
													StrokeDashArray="{Binding Dashes}"
													SnapsToDevicePixels="True">
													<Path.Effect>
														<DropShadowEffect
															x:Name="myDropShadowEffect"
															Color="{Binding DimColor}"
															ShadowDepth="0"
															Direction="0"
															BlurRadius="{Binding NeonEffect}" />
													</Path.Effect>
												</Path>

												<Grid.ToolTip>
													<ToolTip
														Content="{Binding BranchToolTip}"
														Placement="Mouse"
														BorderBrush="{Binding Brush}"
														BorderThickness="2" />
												</Grid.ToolTip>

												<!-- Branch line context menu -->
												<Grid.ContextMenu>
													<ContextMenu>
										
														<Separator Background="{DynamicResource BorderBrush}" />

														<MenuItem
															Header="Change color"
															Command="{Binding ChangeColorCommand}">
															<MenuItem.Icon>
																<Border>
																	<TextBlock Style="{DynamicResource MenuIconStyle}" Text="&#xE891;" />
																</Border>
															</MenuItem.Icon>
														</MenuItem>

														<Separator Background="{DynamicResource BorderBrush}" />

													</ContextMenu>
												</Grid.ContextMenu>
											</Grid>
										</DataTemplate>
									</Setter.Value>
								</Setter>
							</DataTrigger>


							<!-- Merge line -->
							<DataTrigger Binding="{Binding Type}" Value="MergeViewModel">
								<Setter Property="IsEnabled" Value="false" />
								<Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
								<Setter Property="ContentTemplate">
									<Setter.Value>
										<DataTemplate>
											<Grid>
												<Path
													Data="{Binding Line}"
													Stroke="{Binding Brush}"
													StrokeThickness="{Binding Stroke}"
													StrokeDashArray="{Binding StrokeDash}" />
											</Grid>
										</DataTemplate>
									</Setter.Value>
								</Setter>
							</DataTrigger>

						
						</Style.Triggers>

					</Style>

				</ListBox.ItemContainerStyle>

			</ListBox>


		</Border>

		<ui:HideableGridSplitter
			Grid.Row="1"
			Visibility="{Binding IsShowCommitDetails, Converter={StaticResource VC}}"
			Background="{DynamicResource BorderBrush}"
			HorizontalAlignment="Stretch"
			VerticalAlignment="Center"
			Height="2" />

		<!-- Commit details -->
		<local:CommitDetailsView
			Grid.Row="2"
			DataContext="{Binding CommitDetailsViewModel}" />

	</Grid>

</UserControl>
