#!/bin/bash


# Function to update packages in a given project
update_project_packages() {
    local project_path="$1"
    echo
    echo "#################################################################################"
    echo "Checking packages for project: $project_path"

    # List outdated packages and update each
    dotnet list "$project_path" package --outdated --highest-minor | \
    grep '>' | \
    awk '{print $2 " " $4}' | \
    while IFS= read -r line; do
        local package_name=$(echo "$line" | awk '{print $1}')
        local package_version=$(echo "$line" | awk '{print $2}')
        echo
        echo "---------------------------------------------------------------------------------"
        echo "Updating $package_name from version $package_version in $project_path"
        dotnet add "$project_path" package "$package_name"
    done
}


solutionFile=$(find . -maxdepth 1 -name "*.sln")
echo "Updating outdated packages for solution file: $solutionFile"
dotnet restore
echo

echo "Listing all outdated packages after updates: $PWD"
dotnet list package --outdated 
echo "================================================================================="

# Extract paths to .csproj files from the solution file and update their packages

projectFiles=$(grep "Project(" "$solutionFile" | grep ".csproj" | awk -F '=' '{print $2}' | awk -F ',' '{print $2}' | tr -d ' "' | tr '\\' '/')

for projectFile in $projectFiles; do
    update_project_packages "$projectFile"
done

echo
echo "================================================================================="
echo "Listing all outdated packages after updates: $PWD"
dotnet list package --outdated 
