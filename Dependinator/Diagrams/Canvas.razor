@namespace Dependinator.Diagrams
@using Microsoft.AspNetCore.Components.Forms

<div>
    <code>@Info</code>
    <MudText Typo="Typo.h6">MudBlazor is @Text</MudText>
    <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="ButtonOnClick">@ButtonText</MudButton>
</div>

@*
How to use event.PreventDefault in Blazor - Meziantou's blog
https://www.meziantou.net/how-to-use-event-preventdefault-in-blazor.htm
*@
<div @ref="dropZoneElement" class="drop-zone">
    <InputFile hidden="true" OnChange="LoadFiles" multiple @ref="inputFile" />
    <svg id="svgcanvas" @ref=@Ref xmlns="http://www.w3.org/2000/svg" width="@Width" height="@Height" viewBox="@ViewBox">
        <style>
            svg {
                cursor: @Cursor;
            }

            .hoverable:hover * {
                stroke: #51b8fc;
                stroke-width: 4px;
                stroke-opacity: 1;
            }

            .hoverline:hover * {
                stroke: #51b8fc;
                stroke-width: 6px;
                stroke-opacity: 1;
            }

            .iconName {
                font: Verdana, Helvetica, Arial, sans-serif;
                fill: white;
                dominant-baseline: hanging;
                text-anchor: middle;
                pointer-events: none;
            }

            .nodeName {
                font: Verdana, Helvetica, Arial, sans-serif;
                fill: white;
                dominant-baseline: hanging;
                text-anchor: start;
                pointer-events: none;
            }
        </style>
        <defs>
            <marker id="arrow" markerWidth="10" markerHeight="7" refX="10" refY="3.5" orient="auto">
                <polygon points="0 0, 10 3.5, 0 7" fill="white" />
            </marker>
            @((MarkupString)IconDefs)
        </defs>

        @((MarkupString)Content)
    </svg>
</div>

@code {
    public string Text { get; set; } = "????";
    public string ButtonText { get; set; } = "Click Me";
    public int ButtonClicked { get; set; }

    void ButtonOnClick()
    {
        ButtonClicked += 1;
        Text = $"Awesome x {ButtonClicked}";
        ButtonText = "Click Me Again";
    }
}