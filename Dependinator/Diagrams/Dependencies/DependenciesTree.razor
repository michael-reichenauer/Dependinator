@inject IApplicationEvents applicationEvents
@inject IDependenciesService srv
@inject IScreenService screenService
@inject IInteractionService interactionService

<style>
    .hover-button {
        visibility: hidden;
    }

    .hover-element:hover .hover-button {
        visibility: visible;
    }
</style>

<MudDialog Style="@NodeToolBarPosition">
    <DialogContent>
        <MudStack>
            <MudPaper Class="overflow-y-auto ml-n8" Elevation="0" MaxWidth="MaxWidth" MaxHeight="500px">
                <MudTreeView Items="@srv.TreeItems" Hover="true" Dense="true" Width="100%">
                    <ItemTemplate Context="treeItem">
                        @{
                            var item = (TreeItem)treeItem;
                        }
                        <MudTreeViewItem Items="@item.Children" Icon="@item.Icon"
                            OnClick="() => srv.SetSelected(item.Value!)" @bind-Expanded="@item.Expanded">
                            <BodyContent>
                                <div style="display: grid; grid-template-columns: 1fr auto; align-items: center; width: 100%"
                                    class="hover-element">
         
                                    <MudText Style="justify-self: start;">@item.Text</MudText>
                                    
                                    <div style="justify-self: end;">
                                        <MudIconButton Icon="@Icons.Material.Filled.CenterFocusStrong" Size="Size.Small"
                                            Color="Color.Inherit" Class="ml-3 hover-button"
                                            OnClick="() => srv.ShowNode(item.NodeId)" />
                                    </div>
                                </div>
                            </BodyContent>
                        </MudTreeViewItem>
                    </ItemTemplate>
                </MudTreeView>
            </MudPaper>
        </MudStack>
    </DialogContent>
</MudDialog>




@code {
    [CascadingParameter] IMudDialogInstance MudDialog { get; set; } = null!;
   
    string NodeToolBarPosition => 
        $"Position: fixed; left:{interactionService.SelectedNodePosition.X + 40}px; top:{interactionService.SelectedNodePosition.Y - 20}px";
    
    int MaxHeight => (int)screenService.SvgRect.Height - 5;
    int MaxWidth => (int)screenService.SvgRect.Width - 20;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
        if (firstRender) applicationEvents.UIStateChanged += () => InvokeAsync(StateHasChanged);
    }
}
