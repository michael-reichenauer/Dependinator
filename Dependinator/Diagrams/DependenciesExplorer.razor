@inject IApplicationEvents applicationEvents
@inject IDependenciesService srv

<MudPopover Open="@srv.IsShowExplorer" Fixed="true" Class="px-4 pt-4 ml-1" AnchorOrigin="Origin.BottomLeft"
    TransformOrigin="Origin.BottomLeft">

    <MudStack>
        <MudStack Row="true">
            <MudIcon Icon="@Icons.Material.Outlined.Polyline" Class="my-n2" />
            <MudText Typo="Typo.subtitle2" Class="my-n2 ml-n2">Dependencies Explorer</MudText>
            <MudSpacer />
            <MudIconButton Icon="@Icons.Material.Outlined.Close" Size="Size.Small" Class="my-n2"
                OnClick="srv.HideExplorer" />
        </MudStack>

        <MudDivider />

        <div class="d-flex flex-column">
            <MudText>Content of the popover can be anything.</MudText>
        </div>
    </MudStack>
</MudPopover>



@code {
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
        if (firstRender) applicationEvents.UIStateChanged += () => InvokeAsync(StateHasChanged);
    }
}