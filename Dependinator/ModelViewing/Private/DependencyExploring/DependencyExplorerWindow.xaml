<Window
    x:Class="Dependinator.ModelViewing.Private.DependencyExploring.DependencyExplorerWindow"
    Name="ReferencesDialogWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:referencesViewing="clr-namespace:Dependinator.ModelViewing.Private.DependencyExploring"
    xmlns:private="clr-namespace:Dependinator.ModelViewing.Private.DependencyExploring.Private"
    mc:Ignorable="d"
    Title="Dependency Explorer" Width="750" Height="500" ResizeMode="CanResize"
    Background="{DynamicResource BackgroundBrush}"
    WindowStyle="None" AllowsTransparency="True"
    BorderBrush="{DynamicResource BorderBrush}" BorderThickness="3"
    ShowInTaskbar="True" WindowStartupLocation="CenterOwner">

    <!-- Enable "normal" windows behavior with drag and resize,
	this does require WindowChrome.IsHitTestVisibleInChrome="True" in controls below -->
    <Window.Resources>
        <Style TargetType="{x:Type referencesViewing:DependencyExplorerWindow}">
            <Setter Property="WindowChrome.WindowChrome">
                <Setter.Value>
                    <WindowChrome />
                </Setter.Value>
            </Setter>
        </Style>

        <Style
            x:Key="LibraryTreeViewItemStyle" TargetType="{x:Type TreeViewItem}">
            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
            <Setter Property="FontWeight" Value="Normal" />
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="FontWeight" Value="Bold" />
                </Trigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>

    <Window.InputBindings>
        <KeyBinding
            Key="Escape"
            Command="{Binding CancelCommand}"
            CommandParameter="{Binding ElementName=ReferencesDialogWindow}" />
    </Window.InputBindings>

    <Grid>
        <Grid.RowDefinitions>
            <!-- Title and tool bar -->
            <RowDefinition Height="Auto" />
            <!-- Dialog contents -->
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <!--Left side -->
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
            <!-- Dialog contents -->
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <!-- Title and tool bar -->
        <Border
            Grid.Row="0" Grid.ColumnSpan="3"
            BorderBrush="{DynamicResource BorderBrush}"
            BorderThickness="2" Background="{DynamicResource TitlebarBackgroundBrush}">
            <Grid>
                <StackPanel
                    HorizontalAlignment="Left"
                    Orientation="Horizontal">

                    <TextBlock Text="&#xe31c;" Style="{DynamicResource MenuIconStyle}" />

                    <TextBlock Text="Dependency Explorer" Foreground="{DynamicResource TextBrush}" Margin="10, 5" />

                    <Button
                        ToolTip="Switch sides"
                        WindowChrome.IsHitTestVisibleInChrome="True"
                        Margin="20,0,0,0"
                        Style="{DynamicResource IconButtonStyle}"
                        Content="&#xe8d4;"
                        Command="{Binding SwitchSidesCommand}" />

                    <Button
                        ToolTip="Show suppressed dependencies"
                        WindowChrome.IsHitTestVisibleInChrome="True"
                        Style="{DynamicResource IconButtonStyle}"
                        Click="Suppressed_OnClick">

                        <Grid Margin="0">
                            <TextBlock
                                Text="&#xe3a5;" Style="{DynamicResource MenuIconStyle}" Margin="0,0"
                                Padding="0,0" />
                            <TextBlock
                                FontSize="15" Text="&#xE5C5;" Style="{DynamicResource MenuIconStyle}"
                                Margin="17,0,0,0" Padding="0,0" Background="Transparent"
                                Foreground="{DynamicResource TextLowBrush}" />
                        </Grid>

                        <Button.ContextMenu>
                            <ContextMenu Name="SuppressedContextMenu">

                                <MenuItem
                                    Header="Show Suppressed Sources"
                                    IsEnabled="{Binding HasHiddenSourceNodes}"
                                    ItemsSource="{Binding HiddenSourceItems}">

                                    <MenuItem.Resources>
                                        <DataTemplate
                                            DataType="{x:Type private:HiddenNodeItem}">
                                            <MenuItem
                                                Header="{Binding Name}"
                                                Command="{Binding ShowNodeCommand}" />
                                        </DataTemplate>
                                    </MenuItem.Resources>
                                </MenuItem>

                                <MenuItem
                                    Header="Show Suppressed Targets"
                                    IsEnabled="{Binding HasHiddenTargetNodes}"
                                    ItemsSource="{Binding HiddenTargetItems}">

                                    <MenuItem.Resources>
                                        <DataTemplate
                                            DataType="{x:Type private:HiddenNodeItem}">
                                            <MenuItem
                                                Header="{Binding Name}"
                                                Command="{Binding ShowNodeCommand}" />
                                        </DataTemplate>
                                    </MenuItem.Resources>
                                </MenuItem>
                            </ContextMenu>

                        </Button.ContextMenu>
                    </Button>

                </StackPanel>

                <!-- Close Button -->
                <Button
                    HorizontalAlignment="Right" WindowChrome.IsHitTestVisibleInChrome="True"
                    Style="{DynamicResource IconButtonStyle}"
                    KeyboardNavigation.IsTabStop="False"
                    Content="&#xE14C;"
                    FontSize="16"
                    Command="{Binding CancelCommand}"
                    CommandParameter="{Binding ElementName=ReferencesDialogWindow}" />
            </Grid>
        </Border>


        <TextBlock
            Grid.Row="1" Grid.Column="0"
            FontSize="14"
            HorizontalAlignment="Right"
            VerticalAlignment="Center"
            Margin="10,5"
            Text="{Binding SourceText}"
            Foreground="{DynamicResource TextBrush}"
            ToolTip="{Binding SourceText}" />

        <Button
            Grid.Row="1" Grid.Column="1"
            Style="{DynamicResource IconButtonStyle}"
            FontSize="40"
            Foreground="{DynamicResource TextBrush}"
            Content="&#xe8e4;"
            Command="{Binding SwitchSidesCommand}">

            <Button.ToolTip>
                <ToolTip>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="&#xe8d4;" Style="{DynamicResource MenuIconStyle}" />
                        <TextBlock Text="Click to switch sides" />
                    </StackPanel>
                </ToolTip>
            </Button.ToolTip>
        </Button>

        <TextBlock
            Margin="10,5"
            FontSize="14"
            HorizontalAlignment="Left"
            VerticalAlignment="Center"
            Grid.Row="1" Grid.Column="2"
            Text="{Binding TargetText}"
            Foreground="{DynamicResource TextBrush}"
            ToolTip="{Binding TargetText}" />


        <Grid Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3">

            <Grid.ColumnDefinitions>
                <!--Left side -->
                <ColumnDefinition Width="*" />
                <!-- Dialog contents -->
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <!-- Source -->

            <TreeView
                Grid.Column="0"
                ItemsSource="{Binding SourceItems}"
                Background="{DynamicResource BackgroundBrush}"
                BorderBrush="{DynamicResource BorderBrush}"
                ItemContainerStyle="{StaticResource LibraryTreeViewItemStyle}">

                <TreeView.Resources>
                    <SolidColorBrush
                        x:Key="{x:Static SystemColors.HighlightBrushKey}"
                        Color="Transparent" />
                    <SolidColorBrush
                        x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}"
                        Color="Transparent" />
                </TreeView.Resources>

                <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate
                        DataType="{x:Type private:DependencyItemViewModel}"
                        ItemsSource="{Binding SubItems}"
                        ItemContainerStyle="{StaticResource LibraryTreeViewItemStyle}">
                        <private:DependencyItemView />
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>

            </TreeView>


            <!-- Target -->
            <TreeView
                Grid.Column="1"
                ItemsSource="{Binding TargetItems}"
                Background="{DynamicResource BackgroundBrush}"
                BorderBrush="{DynamicResource BorderBrush}"
                ItemContainerStyle="{StaticResource LibraryTreeViewItemStyle}">

                <TreeView.Resources>
                    <SolidColorBrush
                        x:Key="{x:Static SystemColors.HighlightBrushKey}"
                        Color="Transparent" />
                    <SolidColorBrush
                        x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}"
                        Color="Transparent" />
                </TreeView.Resources>

                <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate
                        DataType="{x:Type private:DependencyItemViewModel}"
                        ItemsSource="{Binding SubItems}"
                        ItemContainerStyle="{StaticResource LibraryTreeViewItemStyle}">
                        <private:DependencyItemView />
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>

            </TreeView>
        </Grid>
    </Grid>
</Window>